{
  "version": "1.0.0",
  "lastUpdated": "2025-01-01T00:00:00Z",
  "servers": [
    {
      "id": "playwright",
      "name": "Playwright",
      "description": "Browser automation and testing capabilities for web scraping and testing",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["@playwright/mcp@latest"]
      },
      "documentation": "https://github.com/microsoft/playwright-mcp",
      "repository": "https://github.com/microsoft/playwright-mcp",
      "tags": ["browser", "automation", "testing", "scraping"],
      "author": "Microsoft",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "filesystem",
      "name": "Filesystem",
      "description": "Secure local file system access with configurable directory permissions",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "desktop_path": {
          "type": "directory_path",
          "required": false,
          "description": "Path to your Desktop directory for file access",
          "placeholder": "/Users/yourusername/Desktop",
          "default": ""
        },
        "downloads_path": {
          "type": "directory_path",
          "required": false,
          "description": "Path to your Downloads directory for file access",
          "placeholder": "/Users/yourusername/Downloads",
          "default": ""
        },
        "additional_paths": {
          "type": "string",
          "required": false,
          "description": "Additional comma-separated directory paths to grant access to",
          "placeholder": "/Users/yourusername/Documents,/Users/yourusername/Projects"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "{{desktop_path}}",
          "{{downloads_path}}",
          "{{additional_paths}}"
        ]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "tags": ["files", "filesystem", "local"],
      "author": "MCP Team",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "sqlite",
      "name": "SQLite",
      "description": "Query and manage SQLite databases with full SQL support",
      "category": "database",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "database_path": {
          "type": "file_path",
          "required": true,
          "description": "Path to your SQLite database file",
          "placeholder": "/path/to/your/database.db"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-sqlite", "--db-path", "{{database_path}}"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite",
      "repository": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite",
      "tags": ["database", "sql", "sqlite"],
      "author": "MCP Team",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "github",
      "name": "GitHub",
      "description": "Interact with GitHub repositories, issues, and pull requests",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "github_token": {
          "type": "api_key",
          "required": true,
          "description": "GitHub Personal Access Token for API access",
          "placeholder": "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "ghcr.io/github/github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "{{github_token}}"
        }
      },
      "documentation": "https://github.com/github/github-mcp-server",
      "repository": "https://github.com/github/github-mcp-server",
      "tags": ["github", "git", "version-control", "repositories"],
      "author": "GitHub",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "git",
      "name": "Git",
      "description": "Interact with Git repositories.",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-git"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["git", "version-control"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "memory",
      "name": "Memory",
      "description": "In-memory data store for temporary data.",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-memory"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["memory", "storage"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "sequential-thinking",
      "name": "Sequential Thinking",
      "description": "A server for sequential thinking tasks.",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["ai", "reasoning"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "grafana",
      "name": "Grafana",
      "description": "Interact with Grafana dashboards and data sources.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "grafana_url": {
          "type": "string",
          "required": true,
          "description": "URL of your Grafana instance",
          "default": "http://localhost:3000"
        },
        "grafana_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Grafana service account token"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "GRAFANA_URL={{grafana_url}}",
          "-e",
          "GRAFANA_API_KEY={{grafana_api_key}}",
          "mcp/grafana",
          "-t",
          "stdio",
          "-debug"
        ]
      },
      "documentation": "https://github.com/grafana/mcp-grafana",
      "repository": "https://github.com/grafana/mcp-grafana",
      "author": "Grafana",
      "tags": ["grafana", "monitoring", "dashboards"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "hubspot",
      "name": "HubSpot",
      "description": "Interact with the HubSpot CRM.",
      "category": "crm",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "hubspot_token": {
          "type": "api_key",
          "required": true,
          "description": "HubSpot Private App Access Token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@hubspot/mcp-server"],
        "env": {
          "PRIVATE_APP_ACCESS_TOKEN": "{{hubspot_token}}"
        }
      },
      "documentation": "https://developers.hubspot.com/mcp",
      "repository": "https://github.com/HubSpot/mcp-server",
      "author": "HubSpot",
      "tags": ["hubspot", "crm"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "honeycomb",
      "name": "Honeycomb",
      "description": "Query Honeycomb observability data.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "complex",
      "requiresAuth": true,
      "parameters": {
        "honeycomb_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Honeycomb API key"
        },
        "path_to_repo": {
          "type": "string",
          "required": true,
          "description": "Absolute path to the cloned honeycomb-mcp repository"
        }
      },
      "installation": {
        "command": "node",
        "args": ["{{path_to_repo}}/build/index.mjs"],
        "env": {
          "HONEYCOMB_API_KEY": "{{honeycomb_api_key}}"
        }
      },
      "documentation": "https://github.com/honeycombio/honeycomb-mcp",
      "repository": "https://github.com/honeycombio/honeycomb-mcp",
      "author": "honeycombio",
      "tags": ["honeycomb", "observability", "monitoring"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "alibaba-cloud-rds",
      "name": "Alibaba Cloud RDS",
      "description": "Manage Alibaba Cloud RDS instances.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alibaba_cloud_access_key_id": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key ID"
        },
        "alibaba_cloud_access_key_secret": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key Secret"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["alibabacloud-rds-openapi-mcp-server@latest"],
        "env": {
          "ALIBABA_CLOUD_ACCESS_KEY_ID": "{{alibaba_cloud_access_key_id}}",
          "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "{{alibaba_cloud_access_key_secret}}"
        }
      },
      "documentation": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["alibaba-cloud", "rds", "database"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "cloudflare-observability",
      "name": "Cloudflare Observability",
      "description": "Access Cloudflare observability data.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "installation": {
        "command": "npx",
        "args": ["mcp-remote", "https://observability.mcp.cloudflare.com/sse"]
      },
      "documentation": "https://github.com/cloudflare/mcp-server-cloudflare",
      "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
      "author": "Cloudflare",
      "tags": ["cloudflare", "observability", "monitoring"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "cloudflare-bindings",
      "name": "Cloudflare Bindings",
      "description": "Interact with Cloudflare bindings.",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "installation": {
        "command": "npx",
        "args": ["mcp-remote", "https://bindings.mcp.cloudflare.com/sse"]
      },
      "documentation": "https://github.com/cloudflare/mcp-server-cloudflare",
      "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
      "author": "Cloudflare",
      "tags": ["cloudflare", "bindings", "development"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "supabase",
      "name": "Supabase",
      "description": "Interact with Supabase projects.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "supabase_access_token": {
          "type": "api_key",
          "required": true,
          "description": "Supabase Personal Access Token"
        },
        "project_ref": {
          "type": "string",
          "required": true,
          "description": "Your Supabase project reference"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@supabase/mcp-server-supabase@latest",
          "--read-only",
          "--project-ref={{project_ref}}"
        ],
        "env": {
          "SUPABASE_ACCESS_TOKEN": "{{supabase_access_token}}"
        }
      },
      "documentation": "https://github.com/supabase-community/supabase-mcp",
      "repository": "https://github.com/supabase-community/supabase-mcp",
      "author": "Supabase Community",
      "tags": ["supabase", "database", "postgres"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "postgres",
      "name": "PostgreSQL",
      "description": "Connect to and query PostgreSQL databases.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "database_uri": {
          "type": "string",
          "required": true,
          "description": "PostgreSQL connection URI"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "DATABASE_URI={{database_uri}}",
          "crystaldba/postgres-mcp",
          "--access-mode=unrestricted"
        ]
      },
      "documentation": "https://github.com/crystaldba/postgres-mcp",
      "repository": "https://github.com/crystaldba/postgres-mcp",
      "author": "crystaldba",
      "tags": ["postgres", "database", "sql"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "agentql-mcp",
      "name": "AgentQL MCP",
      "description": "Web data extraction using AgentQL's data extraction capabilities",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "agentql_api_key": {
          "type": "api_key",
          "required": true,
          "description": "AgentQL API key from Dev Portal"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "agentql-mcp"],
        "env": {
          "AGENTQL_API_KEY": "{{agentql_api_key}}"
        }
      },
      "documentation": "https://github.com/tinyfish-io/agentql-mcp",
      "repository": "https://github.com/tinyfish-io/agentql-mcp",
      "author": "TinyFish.io",
      "tags": ["web", "scraping", "data-extraction"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "agentrpc",
      "name": "AgentRPC MCP",
      "description": "MCP server for connecting AI agents with registered tools across networks",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_secret": {
          "type": "api_key",
          "required": true,
          "description": "AgentRPC API secret"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["agentrpc", "mcp"],
        "env": {
          "AGENTRPC_API_SECRET": "{{api_secret}}"
        }
      },
      "documentation": "https://github.com/agentrpc/agentrpc",
      "repository": "https://github.com/agentrpc/agentrpc",
      "author": "AgentRPC",
      "tags": ["ai", "rpc", "agents"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "agentset-mcp",
      "name": "AgentSet MCP",
      "description": "RAG platform for building document-based AI applications",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "AgentSet API key"
        },
        "namespace_id": {
          "type": "string",
          "required": true,
          "description": "Your AgentSet namespace ID"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@agentset/mcp", "--ns", "{{namespace_id}}"],
        "env": {
          "AGENTSET_API_KEY": "{{api_key}}"
        }
      },
      "documentation": "https://github.com/agentset-ai/mcp-server",
      "repository": "https://github.com/agentset-ai/mcp-server",
      "author": "AgentSet AI",
      "tags": ["ai", "rag", "documents"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "adb-mysql-mcp",
      "name": "Alibaba Cloud ADB MySQL",
      "description": "AnalyticDB for MySQL database interface for AI agents",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "host": {
          "type": "string",
          "required": true,
          "description": "Database host address"
        },
        "port": {
          "type": "number",
          "required": true,
          "description": "Database port number",
          "default": "3306"
        },
        "database": {
          "type": "string",
          "required": true,
          "description": "Database name"
        },
        "username": {
          "type": "string",
          "required": true,
          "description": "Database username"
        },
        "password": {
          "type": "api_key",
          "required": true,
          "description": "Database password"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "adb-mysql-mcp-server"]
      },
      "documentation": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["alibaba-cloud", "mysql", "database", "analytics"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "adfin-mcp",
      "name": "Adfin MCP Server",
      "description": "Model Context Protocol Server for connecting with Adfin APIs",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "adfin_email": {
          "type": "string",
          "required": true,
          "description": "Your Adfin account email"
        },
        "adfin_password": {
          "type": "api_key",
          "required": true,
          "description": "Your Adfin account password"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-adfin"],
        "env": {
          "ADFIN_EMAIL": "{{adfin_email}}",
          "ADFIN_PASSWORD": "{{adfin_password}}"
        }
      },
      "documentation": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "repository": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "author": "Adfin Engineering",
      "tags": ["adfin", "finance", "api"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alation-mcp",
      "name": "Alation AI Agent SDK",
      "description": "Data catalog integration for agentic experiences with Alation",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alation_url": {
          "type": "url",
          "required": true,
          "description": "Your Alation instance URL"
        },
        "user_id": {
          "type": "string",
          "required": false,
          "description": "User ID for user account authentication"
        },
        "refresh_token": {
          "type": "api_key",
          "required": false,
          "description": "Refresh token for user account authentication"
        },
        "client_id": {
          "type": "string",
          "required": false,
          "description": "Client ID for service account authentication"
        },
        "client_secret": {
          "type": "api_key",
          "required": false,
          "description": "Client secret for service account authentication"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "alation-ai-agent-mcp"]
      },
      "documentation": "https://github.com/Alation/alation-ai-agent-sdk",
      "repository": "https://github.com/Alation/alation-ai-agent-sdk",
      "author": "Alation",
      "tags": ["data-catalog", "alation", "data-governance"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alpaca-mcp",
      "name": "Alpaca Trading MCP",
      "description": "Model Context Protocol server for Alpaca's Trading API with natural language trading capabilities",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alpaca_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Alpaca API key (paper or live trading)"
        },
        "alpaca_secret_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Alpaca secret key"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-it",
          "--rm",
          "-e",
          "ALPACA_API_KEY={{alpaca_api_key}}",
          "-e",
          "ALPACA_SECRET_KEY={{alpaca_secret_key}}",
          "ghcr.io/chand1012/alpaca-mcp-server:latest"
        ]
      },
      "documentation": "https://github.com/alpacahq/alpaca-mcp-server",
      "repository": "https://github.com/alpacahq/alpaca-mcp-server",
      "author": "Alpaca",
      "tags": ["trading", "finance", "stocks", "alpaca"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "apify-actors",
      "name": "Apify Actors MCP",
      "description": "MCP server for Apify Actors enabling web scraping, search, and data extraction",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "apify_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Apify API token from console.apify.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@apify/actors-mcp-server"],
        "env": {
          "APIFY_TOKEN": "{{apify_token}}"
        }
      },
      "documentation": "https://github.com/apify/actors-mcp-server",
      "repository": "https://github.com/apify/actors-mcp-server",
      "author": "Apify",
      "tags": ["web-scraping", "automation", "data-extraction", "apify"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "apache-doris",
      "name": "Apache Doris",
      "description": "MCP Server for Apache Doris, an MPP-based real-time data warehouse",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "doris_host": {
          "type": "string",
          "required": true,
          "description": "Apache Doris host address",
          "default": "127.0.0.1"
        },
        "doris_port": {
          "type": "number",
          "required": true,
          "description": "Apache Doris port number",
          "default": "9030"
        },
        "doris_user": {
          "type": "string",
          "required": true,
          "description": "Apache Doris username",
          "default": "root"
        },
        "doris_password": {
          "type": "api_key",
          "required": true,
          "description": "Apache Doris password"
        },
        "token_secret": {
          "type": "api_key",
          "required": true,
          "description": "Authentication token secret"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "doris-mcp-server"],
        "startupCommand": "doris-mcp-server --transport stdio",
        "env": {
          "DORIS_HOST": "{{doris_host}}",
          "DORIS_PORT": "{{doris_port}}",
          "DORIS_USER": "{{doris_user}}",
          "DORIS_PASSWORD": "{{doris_password}}",
          "AUTH_TYPE": "token",
          "TOKEN_SECRET": "{{token_secret}}"
        }
      },
      "documentation": "https://github.com/apache/doris-mcp-server",
      "repository": "https://github.com/apache/doris-mcp-server",
      "author": "Apache Software Foundation",
      "tags": ["database", "analytics", "doris", "olap"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "archbee",
      "name": "Archbee",
      "description": "Write and publish documentation that becomes the trusted source for instant answers with AI",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Archbee API key from Space Settings"
        },
        "setup_method": {
          "type": "select",
          "required": true,
          "description": "Choose your setup method",
          "options": ["base_link", "space_id"],
          "default": "base_link"
        },
        "api_base": {
          "type": "url",
          "required": false,
          "description": "Your Archbee documentation base URL (when using base_link method)",
          "placeholder": "https://your-docs.io/"
        },
        "space_id": {
          "type": "string",
          "required": false,
          "description": "Your Archbee space ID (when using space_id method)"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@archbee/mcp"],
        "env": {
          "API_KEY": "{{api_key}}",
          "API_BASE": "{{api_base}}",
          "SPACE_ID": "{{space_id}}"
        }
      },
      "documentation": "https://www.npmjs.com/package/@archbee/mcp",
      "repository": "https://github.com/archbee-io/archbee-mcp",
      "author": "Archbee",
      "tags": ["documentation", "knowledge-base", "writing", "publishing"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "arize-phoenix",
      "name": "Arize Phoenix",
      "description": "Inspect traces, manage prompts, curate datasets, and run experiments with Phoenix AI observability",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "phoenix_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Phoenix API key"
        },
        "phoenix_base_url": {
          "type": "url",
          "required": true,
          "description": "Phoenix base URL",
          "placeholder": "https://my-phoenix.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@arizeai/phoenix-mcp@latest",
          "--baseUrl",
          "{{phoenix_base_url}}",
          "--apiKey",
          "{{phoenix_api_key}}"
        ]
      },
      "documentation": "https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp",
      "repository": "https://github.com/Arize-ai/phoenix",
      "author": "Arize AI",
      "tags": ["ai", "observability", "monitoring", "traces", "experiments"],
      "validatedOn": "2025-01-01"
    }
  ]
}
