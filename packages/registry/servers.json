{
  "version": "1.0.0",
  "lastUpdated": "2025-01-02T16:00:00Z",
  "servers": [
    {
      "id": "postgres",
      "name": "Postgres MCP Pro",
      "description": "Connect to and query PostgreSQL databases.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "database_uri": {
          "type": "string",
          "required": true,
          "description": "PostgreSQL connection URI"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "DATABASE_URI",
          "crystaldba/postgres-mcp",
          "--access-mode=unrestricted"
        ],
        "env": {
          "DATABASE_URI": "{{database_uri}}"
        }
      },
      "documentation": "https://github.com/crystaldba/postgres-mcp",
      "repository": "https://github.com/crystaldba/postgres-mcp",
      "author": "crystaldba",
      "tags": ["postgres", "database", "sql"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "aws-bedrock-kb",
      "name": "AWS Bedrock KB Retrieval",
      "description": "Query Amazon Bedrock Knowledge Bases using natural language to retrieve relevant information from your data sources",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "aws_profile": {
          "type": "string",
          "required": true,
          "description": "AWS profile name"
        },
        "aws_region": {
          "type": "string",
          "required": true,
          "description": "AWS region",
          "default": "us-east-1"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["awslabs.bedrock-kb-retrieval-mcp-server@latest"],
        "env": {
          "AWS_PROFILE": "{{aws_profile}}",
          "AWS_REGION": "{{aws_region}}"
        }
      },
      "documentation": "https://github.com/awslabs/mcp/tree/main/src/bedrock-kb-retrieval-mcp-server",
      "repository": "https://github.com/awslabs/mcp",
      "author": "AWS Labs",
      "tags": ["aws", "bedrock", "knowledge-base", "ai"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "supabase",
      "name": "Supabase",
      "description": "Interact with Supabase projects.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "supabase_access_token": {
          "type": "api_key",
          "required": true,
          "description": "Supabase Personal Access Token"
        },
        "project_ref": {
          "type": "string",
          "required": true,
          "description": "Your Supabase project reference"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@supabase/mcp-server-supabase@latest",
          "--read-only",
          "--project-ref={{project_ref}}"
        ],
        "env": {
          "SUPABASE_ACCESS_TOKEN": "{{supabase_access_token}}"
        }
      },
      "documentation": "https://github.com/supabase-community/supabase-mcp",
      "repository": "https://github.com/supabase-community/supabase-mcp",
      "author": "Supabase Community",
      "tags": ["supabase", "database", "postgres"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "elevenlabs",
      "name": "ElevenLabs",
      "description": "Text-to-speech and voice generation platform integration",
      "category": "ai",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "elevenlabs_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your ElevenLabs API key"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["elevenlabs-mcp"],
        "env": {
          "ELEVENLABS_API_KEY": "{{elevenlabs_api_key}}"
        }
      },
      "documentation": "https://github.com/elevenlabs/elevenlabs-mcp",
      "repository": "https://github.com/elevenlabs/elevenlabs-mcp",
      "author": "ElevenLabs",
      "tags": ["ai", "voice", "tts", "audio"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "playwright",
      "name": "Playwright",
      "description": "Browser automation and testing capabilities for web scraping and testing",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["@playwright/mcp@latest"]
      },
      "documentation": "https://github.com/microsoft/playwright-mcp",
      "repository": "https://github.com/microsoft/playwright-mcp",
      "tags": ["browser", "automation", "testing", "scraping"],
      "author": "Microsoft",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "context7",
      "name": "Context7",
      "description": "Up-to-date documentation for any Cursor prompt - provides current code context in AI coding environments",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@upstash/context7-mcp@latest"]
      },
      "documentation": "https://github.com/upstash/context7-mcp",
      "repository": "https://github.com/upstash/context7-mcp",
      "author": "Upstash",
      "tags": ["documentation", "context", "coding", "cursor", "ai"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "filesystem",
      "name": "Filesystem",
      "description": "Secure local file system access with configurable directory permissions",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "desktop_path": {
          "type": "directory_path",
          "required": false,
          "description": "Path to your Desktop directory for file access",
          "placeholder": "/Users/yourusername/Desktop",
          "default": ""
        },
        "downloads_path": {
          "type": "directory_path",
          "required": false,
          "description": "Path to your Downloads directory for file access",
          "placeholder": "/Users/yourusername/Downloads",
          "default": ""
        },
        "additional_paths": {
          "type": "string",
          "required": false,
          "description": "Additional comma-separated directory paths to grant access to",
          "placeholder": "/Users/yourusername/Documents,/Users/yourusername/Projects"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "{{desktop_path}}",
          "{{downloads_path}}",
          "{{additional_paths}}"
        ]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "tags": ["files", "filesystem", "local"],
      "author": "MCP Team",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "sqlite",
      "name": "SQLite",
      "description": "Query and manage SQLite databases with full SQL support",
      "category": "database",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "database_path": {
          "type": "file_path",
          "required": true,
          "description": "Path to your SQLite database file",
          "placeholder": "/path/to/your/database.db"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-sqlite", "--db-path", "{{database_path}}"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite",
      "repository": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/sqlite",
      "tags": ["database", "sql", "sqlite"],
      "author": "MCP Team",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "github",
      "name": "GitHub",
      "description": "Interact with GitHub repositories, issues, and pull requests",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "github_token": {
          "type": "api_key",
          "required": true,
          "description": "GitHub Personal Access Token for API access",
          "placeholder": "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "ghcr.io/github/github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "{{github_token}}"
        }
      },
      "documentation": "https://github.com/github/github-mcp-server",
      "repository": "https://github.com/github/github-mcp-server",
      "tags": ["github", "git", "version-control", "repositories"],
      "author": "GitHub",
      "validatedOn": "2024-12-28"
    },
    {
      "id": "git",
      "name": "Git",
      "description": "Interact with Git repositories.",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-git"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["git", "version-control"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "memory",
      "name": "Memory",
      "description": "In-memory data store for temporary data.",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-memory"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["memory", "storage"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "sequential-thinking",
      "name": "Sequential Thinking",
      "description": "A server for sequential thinking tasks.",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["ai", "reasoning"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "grafana",
      "name": "Grafana",
      "description": "Interact with Grafana dashboards and data sources.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "grafana_url": {
          "type": "string",
          "required": true,
          "description": "URL of your Grafana instance",
          "default": "http://localhost:3000"
        },
        "grafana_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Grafana service account token"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "-e",
          "GRAFANA_URL={{grafana_url}}",
          "-e",
          "GRAFANA_API_KEY={{grafana_api_key}}",
          "mcp/grafana",
          "-t",
          "stdio",
          "-debug"
        ]
      },
      "documentation": "https://github.com/grafana/mcp-grafana",
      "repository": "https://github.com/grafana/mcp-grafana",
      "author": "Grafana",
      "tags": ["grafana", "monitoring", "dashboards"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "hubspot",
      "name": "HubSpot",
      "description": "Interact with the HubSpot CRM.",
      "category": "crm",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "hubspot_token": {
          "type": "api_key",
          "required": true,
          "description": "HubSpot Private App Access Token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@hubspot/mcp-server"],
        "env": {
          "PRIVATE_APP_ACCESS_TOKEN": "{{hubspot_token}}"
        }
      },
      "documentation": "https://developers.hubspot.com/mcp",
      "repository": "https://developers.hubspot.com/mcp",
      "author": "HubSpot",
      "tags": ["hubspot", "crm"],
      "validatedOn": "2025-01-01",
      "notes": "Repository appears to be empty, using documentation URL as reference"
    },
    {
      "id": "honeycomb",
      "name": "Honeycomb",
      "description": "Query Honeycomb observability data.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "complex",
      "requiresAuth": true,
      "parameters": {
        "honeycomb_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Honeycomb API key"
        },
        "path_to_repo": {
          "type": "string",
          "required": true,
          "description": "Absolute path to the cloned honeycomb-mcp repository"
        }
      },
      "installation": {
        "command": "node",
        "args": ["{{path_to_repo}}/build/index.mjs"],
        "env": {
          "HONEYCOMB_API_KEY": "{{honeycomb_api_key}}"
        }
      },
      "documentation": "https://github.com/honeycombio/honeycomb-mcp",
      "repository": "https://github.com/honeycombio/honeycomb-mcp",
      "author": "honeycombio",
      "tags": ["honeycomb", "observability", "monitoring"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "alibaba-cloud-rds",
      "name": "Alibaba Cloud RDS",
      "description": "Manage Alibaba Cloud RDS instances.",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alibaba_cloud_access_key_id": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key ID"
        },
        "alibaba_cloud_access_key_secret": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key Secret"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["alibabacloud-rds-openapi-mcp-server@latest"],
        "env": {
          "ALIBABA_CLOUD_ACCESS_KEY_ID": "{{alibaba_cloud_access_key_id}}",
          "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "{{alibaba_cloud_access_key_secret}}"
        }
      },
      "documentation": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-rds-openapi-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["alibaba-cloud", "rds", "database"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "cloudflare-observability",
      "name": "Cloudflare Observability",
      "description": "Access Cloudflare observability data.",
      "category": "monitoring",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "installation": {
        "command": "npx",
        "args": ["mcp-remote", "https://observability.mcp.cloudflare.com/sse"]
      },
      "documentation": "https://github.com/cloudflare/mcp-server-cloudflare",
      "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
      "author": "Cloudflare",
      "tags": ["cloudflare", "observability", "monitoring"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "cloudflare-bindings",
      "name": "Cloudflare Bindings",
      "description": "Interact with Cloudflare bindings.",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "installation": {
        "command": "npx",
        "args": ["mcp-remote", "https://bindings.mcp.cloudflare.com/sse"]
      },
      "documentation": "https://github.com/cloudflare/mcp-server-cloudflare",
      "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
      "author": "Cloudflare",
      "tags": ["cloudflare", "bindings", "development"],
      "validatedOn": "2024-12-28"
    },
    {
      "id": "agentql-mcp",
      "name": "AgentQL MCP",
      "description": "Web data extraction using AgentQL's data extraction capabilities",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "agentql_api_key": {
          "type": "api_key",
          "required": true,
          "description": "AgentQL API key from Dev Portal"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "agentql-mcp"],
        "env": {
          "AGENTQL_API_KEY": "{{agentql_api_key}}"
        }
      },
      "documentation": "https://github.com/tinyfish-io/agentql-mcp",
      "repository": "https://github.com/tinyfish-io/agentql-mcp",
      "author": "TinyFish.io",
      "tags": ["web", "scraping", "data-extraction"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "agentrpc",
      "name": "AgentRPC MCP",
      "description": "MCP server for connecting AI agents with registered tools across networks",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_secret": {
          "type": "api_key",
          "required": true,
          "description": "AgentRPC API secret"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["agentrpc", "mcp"],
        "env": {
          "AGENTRPC_API_SECRET": "{{api_secret}}"
        }
      },
      "documentation": "https://github.com/agentrpc/agentrpc",
      "repository": "https://github.com/agentrpc/agentrpc",
      "author": "AgentRPC",
      "tags": ["ai", "rpc", "agents"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "agentset-mcp",
      "name": "AgentSet MCP",
      "description": "RAG platform for building document-based AI applications",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "AgentSet API key"
        },
        "namespace_id": {
          "type": "string",
          "required": true,
          "description": "Your AgentSet namespace ID"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@agentset/mcp", "--ns", "{{namespace_id}}"],
        "env": {
          "AGENTSET_API_KEY": "{{api_key}}"
        }
      },
      "documentation": "https://github.com/agentset-ai/mcp-server",
      "repository": "https://github.com/agentset-ai/mcp-server",
      "author": "AgentSet AI",
      "tags": ["ai", "rag", "documents"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "adb-mysql-mcp",
      "name": "Alibaba Cloud ADB MySQL",
      "description": "AnalyticDB for MySQL database interface for AI agents",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "host": {
          "type": "string",
          "required": true,
          "description": "Database host address"
        },
        "port": {
          "type": "number",
          "required": true,
          "description": "Database port number",
          "default": "3306"
        },
        "database": {
          "type": "string",
          "required": true,
          "description": "Database name"
        },
        "username": {
          "type": "string",
          "required": true,
          "description": "Database username"
        },
        "password": {
          "type": "api_key",
          "required": true,
          "description": "Database password"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "adb-mysql-mcp-server"]
      },
      "documentation": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-adb-mysql-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["alibaba-cloud", "mysql", "database", "analytics"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "adfin-mcp",
      "name": "Adfin MCP Server",
      "description": "Model Context Protocol Server for connecting with Adfin APIs",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "adfin_email": {
          "type": "string",
          "required": true,
          "description": "Your Adfin account email"
        },
        "adfin_password": {
          "type": "api_key",
          "required": true,
          "description": "Your Adfin account password"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-adfin"],
        "env": {
          "ADFIN_EMAIL": "{{adfin_email}}",
          "ADFIN_PASSWORD": "{{adfin_password}}"
        }
      },
      "documentation": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "repository": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "author": "Adfin Engineering",
      "tags": ["adfin", "finance", "api"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alation-mcp",
      "name": "Alation AI Agent SDK",
      "description": "Data catalog integration for agentic experiences with Alation",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alation_url": {
          "type": "url",
          "required": true,
          "description": "Your Alation instance URL"
        },
        "user_id": {
          "type": "string",
          "required": false,
          "description": "User ID for user account authentication"
        },
        "refresh_token": {
          "type": "api_key",
          "required": false,
          "description": "Refresh token for user account authentication"
        },
        "client_id": {
          "type": "string",
          "required": false,
          "description": "Client ID for service account authentication"
        },
        "client_secret": {
          "type": "api_key",
          "required": false,
          "description": "Client secret for service account authentication"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "alation-ai-agent-mcp"]
      },
      "documentation": "https://github.com/Alation/alation-ai-agent-sdk",
      "repository": "https://github.com/Alation/alation-ai-agent-sdk",
      "author": "Alation",
      "tags": ["data-catalog", "alation", "data-governance"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alpaca-mcp",
      "name": "Alpaca Trading MCP",
      "description": "Model Context Protocol server for Alpaca's Trading API with natural language trading capabilities",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alpaca_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Alpaca API key (paper or live trading)"
        },
        "alpaca_secret_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Alpaca secret key"
        }
      },
      "installation": {
        "command": "docker",
        "args": [
          "run",
          "-it",
          "--rm",
          "-e",
          "ALPACA_API_KEY={{alpaca_api_key}}",
          "-e",
          "ALPACA_SECRET_KEY={{alpaca_secret_key}}",
          "ghcr.io/chand1012/alpaca-mcp-server:latest"
        ]
      },
      "documentation": "https://github.com/alpacahq/alpaca-mcp-server",
      "repository": "https://github.com/alpacahq/alpaca-mcp-server",
      "author": "Alpaca",
      "tags": ["trading", "finance", "stocks", "alpaca"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "apify-actors",
      "name": "Apify Actors MCP",
      "description": "MCP server for Apify Actors enabling web scraping, search, and data extraction",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "apify_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Apify API token from console.apify.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@apify/actors-mcp-server"],
        "env": {
          "APIFY_TOKEN": "{{apify_token}}"
        }
      },
      "documentation": "https://github.com/apify/actors-mcp-server",
      "repository": "https://github.com/apify/actors-mcp-server",
      "author": "Apify",
      "tags": ["web-scraping", "automation", "data-extraction", "apify"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "apache-doris",
      "name": "Apache Doris",
      "description": "MCP Server for Apache Doris, an MPP-based real-time data warehouse",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "doris_host": {
          "type": "string",
          "required": true,
          "description": "Apache Doris host address",
          "default": "127.0.0.1"
        },
        "doris_port": {
          "type": "number",
          "required": true,
          "description": "Apache Doris port number",
          "default": "9030"
        },
        "doris_user": {
          "type": "string",
          "required": true,
          "description": "Apache Doris username",
          "default": "root"
        },
        "doris_password": {
          "type": "api_key",
          "required": true,
          "description": "Apache Doris password"
        },
        "token_secret": {
          "type": "api_key",
          "required": true,
          "description": "Authentication token secret"
        }
      },
      "installation": {
        "command": "pip",
        "args": ["install", "doris-mcp-server"],
        "env": {
          "DORIS_HOST": "{{doris_host}}",
          "DORIS_PORT": "{{doris_port}}",
          "DORIS_USER": "{{doris_user}}",
          "DORIS_PASSWORD": "{{doris_password}}",
          "AUTH_TYPE": "token",
          "TOKEN_SECRET": "{{token_secret}}"
        }
      },
      "documentation": "https://github.com/apache/doris-mcp-server",
      "repository": "https://github.com/apache/doris-mcp-server",
      "author": "Apache Software Foundation",
      "tags": ["database", "analytics", "doris", "olap"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "archbee",
      "name": "Archbee",
      "description": "Write and publish documentation that becomes the trusted source for instant answers with AI",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Archbee API key from Space Settings"
        },
        "setup_method": {
          "type": "select",
          "required": true,
          "description": "Choose your setup method",
          "options": ["base_link", "space_id"],
          "default": "base_link"
        },
        "api_base": {
          "type": "url",
          "required": false,
          "description": "Your Archbee documentation base URL (when using base_link method)",
          "placeholder": "https://your-docs.io/"
        },
        "space_id": {
          "type": "string",
          "required": false,
          "description": "Your Archbee space ID (when using space_id method)"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@archbee/mcp"],
        "env": {
          "API_KEY": "{{api_key}}",
          "API_BASE": "{{api_base}}",
          "SPACE_ID": "{{space_id}}"
        }
      },
      "documentation": "https://www.npmjs.com/package/@archbee/mcp",
      "repository": "https://github.com/archbee-io/archbee-mcp",
      "author": "Archbee",
      "tags": ["documentation", "knowledge-base", "writing", "publishing"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "arize-phoenix",
      "name": "Arize Phoenix",
      "description": "Inspect traces, manage prompts, curate datasets, and run experiments with Phoenix AI observability",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "phoenix_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Phoenix API key"
        },
        "phoenix_base_url": {
          "type": "url",
          "required": true,
          "description": "Phoenix base URL",
          "placeholder": "https://my-phoenix.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@arizeai/phoenix-mcp@latest",
          "--baseUrl",
          "{{phoenix_base_url}}",
          "--apiKey",
          "{{phoenix_api_key}}"
        ]
      },
      "documentation": "https://github.com/Arize-ai/phoenix/tree/main/js/packages/phoenix-mcp",
      "repository": "https://github.com/Arize-ai/phoenix",
      "author": "Arize AI",
      "tags": ["ai", "observability", "monitoring", "traces", "experiments"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "everything",
      "name": "Everything",
      "description": "Reference / test server with prompts, resources, and tools",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["@modelcontextprotocol/server-everything"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/blob/main/src/everything",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["reference", "testing", "development"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "fetch",
      "name": "Fetch",
      "description": "Web content fetching and conversion for efficient LLM usage",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-fetch"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["web", "content", "fetching"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "time",
      "name": "Time",
      "description": "Time and timezone conversion capabilities",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["mcp-server-time"]
      },
      "documentation": "https://github.com/modelcontextprotocol/servers/blob/main/src/time",
      "repository": "https://github.com/modelcontextprotocol/servers",
      "author": "MCP Team",
      "tags": ["time", "timezone", "utility"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "chroma",
      "name": "Chroma",
      "description": "Embeddings, vector search, document storage, and full-text search with the open-source AI application database",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["chroma-mcp"]
      },
      "documentation": "https://github.com/chroma-core/chroma-mcp",
      "repository": "https://github.com/chroma-core/chroma-mcp",
      "author": "Chroma",
      "tags": ["vector", "embeddings", "search", "database"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "bright-data",
      "name": "Bright Data",
      "description": "Discover, extract, and interact with the web - one interface powering automated access across the public internet",
      "category": "web",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "bright_data_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Bright Data API token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@brightdata/mcp"],
        "env": {
          "BRIGHT_DATA_TOKEN": "{{bright_data_token}}"
        }
      },
      "documentation": "https://github.com/brightdata/brightdata-mcp",
      "repository": "https://github.com/brightdata/brightdata-mcp",
      "author": "Bright Data",
      "tags": ["web-scraping", "data-extraction", "automation"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "couchbase",
      "name": "Couchbase",
      "description": "Interact with the data stored in Couchbase clusters using natural language",
      "category": "database",
      "type": "stdio",
      "difficulty": "complex",
      "requiresAuth": true,
      "parameters": {
        "repository_path": {
          "type": "directory_path",
          "required": true,
          "description": "Path to cloned couchbase MCP repository"
        },
        "couchbase_connection_string": {
          "type": "string",
          "required": true,
          "description": "Couchbase cluster connection string"
        },
        "couchbase_username": {
          "type": "string",
          "required": true,
          "description": "Couchbase username"
        },
        "couchbase_password": {
          "type": "api_key",
          "required": true,
          "description": "Couchbase password"
        },
        "bucket_name": {
          "type": "string",
          "required": true,
          "description": "Couchbase bucket name to use"
        }
      },
      "installation": {
        "command": "uv",
        "args": [
          "--directory",
          "{{repository_path}}",
          "run",
          "src/mcp_server.py",
          "--connection-string={{couchbase_connection_string}}",
          "--username={{couchbase_username}}",
          "--password={{couchbase_password}}",
          "--bucket-name={{bucket_name}}",
          "--read-only-query-mode=true"
        ]
      },
      "documentation": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "repository": "https://github.com/Couchbase-Ecosystem/mcp-server-couchbase",
      "author": "Couchbase Ecosystem",
      "tags": ["database", "nosql", "couchbase"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "aiven",
      "name": "Aiven",
      "description": "Navigate your Aiven projects and interact with PostgreSQL, Apache Kafka, ClickHouse and OpenSearch services",
      "category": "cloud-service",
      "type": "stdio",
      "difficulty": "complex",
      "requiresAuth": true,
      "parameters": {
        "aiven_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Aiven API token"
        },
        "repository_path": {
          "type": "directory_path",
          "required": true,
          "description": "Path to cloned aiven-mcp repository"
        }
      },
      "installation": {
        "command": "uv",
        "args": [
          "--directory",
          "{{repository_path}}",
          "run",
          "--with-editable",
          "{{repository_path}}",
          "--python",
          "3.13",
          "mcp-aiven"
        ],
        "env": {
          "AIVEN_BASE_URL": "https://api.aiven.io",
          "AIVEN_TOKEN": "{{aiven_token}}"
        }
      },
      "documentation": "https://github.com/Aiven-Open/mcp-aiven",
      "repository": "https://github.com/Aiven-Open/mcp-aiven",
      "author": "Aiven",
      "tags": ["cloud", "database", "kafka", "opensearch"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alapi",
      "name": "ALAPI",
      "description": "ALAPI MCP Tools, Call hundreds of API interfaces via MCP",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "alapi_token": {
          "type": "api_key",
          "required": true,
          "description": "Your ALAPI token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@smithery/cli", "install", "@ALAPI-SDK/mcp-alapi-cn", "--client", "claude"],
        "env": {
          "ALAPI_TOKEN": "{{alapi_token}}"
        }
      },
      "documentation": "https://github.com/ALAPI-SDK/mcp-alapi-cn",
      "repository": "https://github.com/ALAPI-SDK/mcp-alapi-cn",
      "author": "ALAPI SDK",
      "tags": ["api", "tools", "utilities"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "alibaba-cloud-devops",
      "name": "Alibaba Cloud DevOps",
      "description": "Yunxiao MCP Server for Yun services providing AI assistants with DevOps capabilities",
      "category": "cloud-service",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "access_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Yunxiao platform access token"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli",
          "install",
          "@aliyun/alibabacloud-devops-mcp-server",
          "--client",
          "claude"
        ],
        "env": {
          "ACCESS_TOKEN": "{{access_token}}"
        }
      },
      "documentation": "https://github.com/aliyun/alibabacloud-devops-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-devops-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["devops", "cloud", "alibaba", "yunxiao"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "magic-mcp",
      "name": "21st.dev Magic",
      "description": "Create crafted UI components inspired by the best 21st.dev design engineers",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "magic_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your 21st.dev Magic API key"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@21st-dev/cli@latest", "install", "claude", "--api-key", "{{magic_api_key}}"]
      },
      "documentation": "https://github.com/21st-dev/magic-mcp",
      "repository": "https://github.com/21st-dev/magic-mcp",
      "author": "21st.dev",
      "tags": ["ui", "components", "design", "development"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "adfin-payments",
      "name": "Adfin",
      "description": "The only platform you need to get paid - all payments in one place, invoicing and accounting reconciliations",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "complex",
      "requiresAuth": true,
      "parameters": {
        "adfin_email": {
          "type": "string",
          "required": true,
          "description": "Your Adfin account email"
        },
        "adfin_password": {
          "type": "api_key",
          "required": true,
          "description": "Your Adfin account password"
        },
        "repository_path": {
          "type": "directory_path",
          "required": true,
          "description": "Absolute path to cloned adfin-mcp repository"
        }
      },
      "installation": {
        "command": "uv",
        "args": ["--directory", "{{repository_path}}", "run", "main_adfin_mcp.py"],
        "env": {
          "ADFIN_EMAIL": "{{adfin_email}}",
          "ADFIN_PASSWORD": "{{adfin_password}}"
        }
      },
      "documentation": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "repository": "https://github.com/Adfin-Engineering/mcp-server-adfin",
      "author": "Adfin Engineering",
      "tags": ["payments", "invoicing", "accounting", "finance"],
      "validatedOn": "2025-01-01"
    },
    {
      "id": "allyson-mcp",
      "name": "Allyson",
      "description": "AI-powered SVG animation generator that transforms static files into animated SVG components",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "allyson_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Allyson API key from the platform"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["allyson-mcp", "--api-key", "{{allyson_api_key}}"]
      },
      "documentation": "https://github.com/isaiahbjork/allyson-mcp",
      "repository": "https://github.com/isaiahbjork/allyson-mcp",
      "author": "Isaiah Bjork",
      "tags": ["svg", "animation", "ai", "design"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "allvoicelab-mcp",
      "name": "AllVoiceLab",
      "description": "An AI voice toolkit with TTS, voice cloning, and video translation capabilities",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "allvoicelab_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your AllVoiceLab API key"
        },
        "domain": {
          "type": "string",
          "required": true,
          "description": "Your AllVoiceLab domain"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["allvoicelab-mcp"],
        "env": {
          "ALLVOICELAB_API_KEY": "{{allvoicelab_api_key}}",
          "ALLVOICELAB_DOMAIN": "{{domain}}"
        }
      },
      "documentation": "https://www.allvoicelab.com/mcp",
      "repository": "https://github.com/allvoicelab/AllVoiceLab-MCP",
      "author": "AllVoiceLab",
      "tags": ["voice", "tts", "ai", "cloning", "translation"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "alapi-mcp",
      "name": "ALAPI",
      "description": "ALAPI MCP Tools - Call hundreds of API interfaces via MCP",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "alapi_token": {
          "type": "api_key",
          "required": true,
          "description": "Your ALAPI token from the platform"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@smithery/cli", "install", "@ALAPI-SDK/mcp-alapi-cn", "--client", "claude"],
        "env": {
          "ALAPI_TOKEN": "{{alapi_token}}"
        }
      },
      "documentation": "https://github.com/ALAPI-SDK/mcp-alapi-cn",
      "repository": "https://github.com/ALAPI-SDK/mcp-alapi-cn",
      "author": "ALAPI SDK",
      "tags": ["api", "tools", "utilities", "integration"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "alibaba-devops-mcp",
      "name": "AlibabaCloud DevOps",
      "description": "Yunxiao MCP Server providing AI assistants with the ability to interact with the Yunxiao platform",
      "category": "cloud-service",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "yunxiao_access_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Yunxiao platform access token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "alibabacloud-devops-mcp-server"],
        "env": {
          "ACCESS_TOKEN": "{{yunxiao_access_token}}"
        }
      },
      "documentation": "https://github.com/aliyun/alibabacloud-devops-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-devops-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["devops", "cloud", "alibaba", "yunxiao"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "apify-actors-mcp",
      "name": "Apify Actors MCP",
      "description": "Use 3,000+ pre-built cloud tools to extract data from websites, e-commerce, social media, search engines, maps, and more",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "apify_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Apify API token from console.apify.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@apify/actors-mcp-server"],
        "env": {
          "APIFY_TOKEN": "{{apify_token}}"
        }
      },
      "documentation": "https://github.com/apify/actors-mcp-server",
      "repository": "https://github.com/apify/actors-mcp-server",
      "author": "Apify",
      "tags": ["web-scraping", "automation", "data-extraction"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "atla-mcp",
      "name": "Atla",
      "description": "Enable AI agents to interact with the Atla API for state-of-the-art LLM evaluation",
      "category": "ai",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "atla_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Atla API key"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["atla-mcp-server"],
        "env": {
          "ATLA_API_KEY": "{{atla_api_key}}"
        }
      },
      "documentation": "https://github.com/atla-ai/atla-mcp-server",
      "repository": "https://github.com/atla-ai/atla-mcp-server",
      "author": "Atla AI",
      "tags": ["ai", "evaluation", "llm"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "armor-crypto-mcp",
      "name": "Armor Crypto MCP",
      "description": "MCP to interface with multiple blockchains, staking, DeFi, swap, bridging, wallet management, DCA, Limit Orders, Coin Lookup, Tracking and more",
      "category": "utility",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "armor_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Armor API key (requires Armor NFT)"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["armor-crypto-mcp@latest"],
        "env": {
          "ARMOR_API_KEY": "{{armor_api_key}}"
        }
      },
      "documentation": "https://github.com/armorwallet/armor-crypto-mcp",
      "repository": "https://github.com/armorwallet/armor-crypto-mcp",
      "author": "Armor Wallet",
      "tags": ["crypto", "blockchain", "defi", "wallet"],
      "validatedOn": "2025-01-02",
      "notes": "Pre-alpha version, requires Armor NFT for API key"
    },
    {
      "id": "aws-cdk-mcp",
      "name": "AWS CDK",
      "description": "Get prescriptive CDK advice, explain CDK Nag rules, check suppressions, generate Bedrock Agent schemas, and discover AWS Solutions Constructs patterns",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": false,
      "installation": {
        "command": "uvx",
        "args": ["awslabs.cdk-mcp-server@latest"]
      },
      "documentation": "https://github.com/awslabs/mcp/tree/main/src/cdk-mcp-server",
      "repository": "https://github.com/awslabs/mcp",
      "author": "AWS Labs",
      "tags": ["aws", "cdk", "infrastructure", "development"],
      "validatedOn": "2025-01-02",
      "notes": "Requires AWS CDK CLI (npm install -g aws-cdk) for full functionality"
    },
    {
      "id": "aws-core-mcp",
      "name": "AWS Core",
      "description": "Core AWS MCP server providing prompt understanding and server management capabilities",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "aws_profile": {
          "type": "string",
          "required": true,
          "description": "AWS profile name with Bedrock access"
        },
        "aws_region": {
          "type": "string",
          "required": true,
          "description": "AWS region",
          "default": "us-east-1"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["awslabs.core-mcp-server@latest"],
        "env": {
          "AWS_PROFILE": "{{aws_profile}}",
          "AWS_REGION": "{{aws_region}}"
        }
      },
      "documentation": "https://github.com/awslabs/mcp/tree/main/src/core-mcp-server",
      "repository": "https://github.com/awslabs/mcp",
      "author": "AWS Labs",
      "tags": ["aws", "core", "ai", "bedrock"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "aws-cost-analysis",
      "name": "AWS Cost Analysis",
      "description": "Analyze CDK projects to identify AWS services used and get pricing information from AWS pricing webpages and API",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "aws_profile": {
          "type": "string",
          "required": true,
          "description": "AWS profile name"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["awslabs.cost-analysis-mcp-server@latest"],
        "env": {
          "AWS_PROFILE": "{{aws_profile}}"
        }
      },
      "documentation": "https://github.com/awslabs/mcp/tree/main/src/cost-analysis-mcp-server",
      "repository": "https://github.com/awslabs/mcp",
      "author": "AWS Labs",
      "tags": ["aws", "cost", "analysis", "pricing"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "aws-nova-canvas",
      "name": "AWS Nova Canvas",
      "description": "Generate images using Amazon Nova Canvas with text prompts and color guidance",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "aws_profile": {
          "type": "string",
          "required": true,
          "description": "AWS profile name with Bedrock access",
          "default": "default"
        },
        "aws_region": {
          "type": "string",
          "required": true,
          "description": "AWS region",
          "default": "us-east-1"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "-y",
          "@smithery/cli",
          "install",
          "@awslabs/nova-canvas-mcp-server",
          "--client",
          "claude"
        ],
        "env": {
          "AWS_PROFILE": "{{aws_profile}}",
          "AWS_REGION": "{{aws_region}}"
        }
      },
      "documentation": "https://github.com/awslabs/mcp/tree/main/src/nova-canvas-mcp-server",
      "repository": "https://github.com/awslabs/mcp",
      "author": "AWS Labs",
      "tags": ["aws", "nova", "image-generation", "ai"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "bankless-onchain",
      "name": "Bankless Onchain",
      "description": "Query Onchain data, like ERC20 tokens, transaction history, smart contract state",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "bankless_api_token": {
          "type": "api_key",
          "required": true,
          "description": "Your Bankless API token"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@bankless/onchain-mcp"],
        "env": {
          "BANKLESS_API_TOKEN": "{{bankless_api_token}}"
        }
      },
      "documentation": "https://github.com/bankless/onchain-mcp",
      "repository": "https://github.com/bankless/onchain-mcp",
      "author": "Bankless",
      "tags": ["blockchain", "crypto", "onchain", "web3"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "browserstack-mcp",
      "name": "BrowserStack",
      "description": "Bring the full power of BrowserStack's Test Platform to your AI tools, making testing faster and easier",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "browserstack_username": {
          "type": "string",
          "required": true,
          "description": "Your BrowserStack username"
        },
        "browserstack_access_key": {
          "type": "api_key",
          "required": true,
          "description": "Your BrowserStack access key"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@browserstack/mcp-server@latest"],
        "env": {
          "BROWSERSTACK_USERNAME": "{{browserstack_username}}",
          "BROWSERSTACK_ACCESS_KEY": "{{browserstack_access_key}}"
        }
      },
      "documentation": "https://github.com/browserstack/mcp-server",
      "repository": "https://github.com/browserstack/mcp-server",
      "author": "BrowserStack",
      "tags": ["testing", "browser", "automation", "qa"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "bucket-mcp",
      "name": "Bucket",
      "description": "Flag features, manage company data, and control feature access using Bucket",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "bucket_app_id": {
          "type": "string",
          "required": true,
          "description": "Your Bucket app ID"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["bucket", "mcp", "--app-id", "{{bucket_app_id}}"]
      },
      "documentation": "https://github.com/bucketco/bucket-javascript-sdk/tree/main/packages/cli#model-context-protocol",
      "repository": "https://github.com/bucketco/bucket-javascript-sdk",
      "author": "Bucket",
      "tags": ["feature-flags", "management", "configuration"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "buildable-mcp",
      "name": "Buildable",
      "description": "Official MCP server for Buildable AI-powered development platform. Enables AI assistants to manage tasks, track progress, get project context, and collaborate with humans on software projects",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "buildable_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Buildable API key (starts with 'bp_')"
        },
        "buildable_project_id": {
          "type": "string",
          "required": true,
          "description": "Your Buildable project ID"
        },
        "buildable_ai_assistant_id": {
          "type": "string",
          "required": false,
          "description": "AI assistant ID (recommended for better context)"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["@bldbl/mcp"],
        "env": {
          "BUILDABLE_API_KEY": "{{buildable_api_key}}",
          "BUILDABLE_PROJECT_ID": "{{buildable_project_id}}",
          "BUILDABLE_AI_ASSISTANT_ID": "{{buildable_ai_assistant_id}}"
        }
      },
      "documentation": "https://github.com/chunkydotdev/bldbl-mcp",
      "repository": "https://github.com/chunkydotdev/bldbl-mcp",
      "author": "Buildable",
      "tags": ["development", "ai", "project-management", "collaboration"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "campertunity-mcp",
      "name": "Campertunity",
      "description": "Search campgrounds around the world on campertunity, check availability, and provide booking links",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "campertunity_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Campertunity API key"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "campertunity-mcp-server@latest"],
        "env": {
          "CAMPERTUNITY_API_KEY": "{{campertunity_api_key}}"
        }
      },
      "documentation": "https://github.com/campertunity/mcp-server",
      "repository": "https://github.com/campertunity/mcp-server",
      "author": "Campertunity",
      "tags": ["travel", "camping", "booking", "search"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "chargebee-mcp",
      "name": "Chargebee",
      "description": "MCP Server that connects AI agents to Chargebee platform for subscription management and billing",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@chargebee/mcp@latest"]
      },
      "documentation": "https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol",
      "repository": "https://github.com/chargebee/agentkit",
      "author": "Chargebee",
      "tags": ["subscription", "billing", "payments", "saas"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "antv-chart-mcp",
      "name": "Chart",
      "description": "A Model Context Protocol server for generating visual charts using AntV visualization library",
      "category": "utility",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "vis_request_server": {
          "type": "string",
          "required": false,
          "description": "Optional visualization request server URL"
        },
        "service_id": {
          "type": "string",
          "required": false,
          "description": "Optional service ID"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@antv/mcp-server-chart"],
        "env": {
          "VIS_REQUEST_SERVER": "{{vis_request_server}}",
          "SERVICE_ID": "{{service_id}}"
        }
      },
      "documentation": "https://github.com/antvis/mcp-server-chart",
      "repository": "https://github.com/antvis/mcp-server-chart",
      "author": "AntV",
      "tags": ["charts", "visualization", "graphics", "data"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "chronulus-mcp",
      "name": "Chronulus AI",
      "description": "Predict anything with Chronulus AI forecasting and prediction agents",
      "category": "ai",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "chronulus_api_key": {
          "type": "api_key",
          "required": true,
          "description": "Your Chronulus AI API key"
        }
      },
      "installation": {
        "command": "uvx",
        "args": ["chronulus-mcp"],
        "env": {
          "CHRONULUS_API_KEY": "{{chronulus_api_key}}"
        }
      },
      "documentation": "https://github.com/ChronulusAI/chronulus-mcp",
      "repository": "https://github.com/ChronulusAI/chronulus-mcp",
      "author": "Chronulus AI",
      "tags": ["ai", "prediction", "forecasting", "analytics"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "circleci-mcp",
      "name": "CircleCI",
      "description": "Enable AI Agents to fix build failures from CircleCI",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "circleci_token": {
          "type": "api_key",
          "required": true,
          "description": "Your CircleCI API token"
        },
        "circleci_base_url": {
          "type": "url",
          "required": false,
          "description": "CircleCI base URL (optional)",
          "default": "https://circleci.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@circleci/mcp-server-circleci"],
        "env": {
          "CIRCLECI_TOKEN": "{{circleci_token}}",
          "CIRCLECI_BASE_URL": "{{circleci_base_url}}"
        }
      },
      "documentation": "https://github.com/CircleCI-Public/mcp-server-circleci",
      "repository": "https://github.com/CircleCI-Public/mcp-server-circleci",
      "author": "CircleCI",
      "tags": ["ci-cd", "build", "deployment", "automation"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "coingecko",
      "name": "CoinGecko",
      "description": "Official CoinGecko API MCP Server for crypto price & market data across 200+ blockchain networks and 8M+ tokens",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "@coingecko/coingecko-mcp"]
      },
      "documentation": "https://docs.coingecko.com/reference/mcp-server/",
      "repository": "https://github.com/coingecko/coingecko-mcp",
      "author": "CoinGecko",
      "tags": ["crypto", "cryptocurrency", "market-data", "blockchain", "api"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "convex",
      "name": "Convex",
      "description": "Introspect and query your apps deployed to Convex backend platform",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "installation": {
        "command": "npx",
        "args": ["-y", "convex@latest", "mcp", "start"]
      },
      "documentation": "https://stack.convex.dev/convex-mcp-server",
      "repository": "https://github.com/get-convex/convex-mcp-server",
      "author": "Convex",
      "tags": ["backend", "database", "serverless", "convex"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "coresignal",
      "name": "Coresignal",
      "description": "Access comprehensive B2B data on companies, employees, and job postings for LLMs and AI workflows",
      "category": "web",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Coresignal API key for accessing B2B data"
        }
      },
      "installation": {
        "command": "npx",
        "args": [
          "mcp-remote@0.0.22",
          "https://mcp.coresignal.com/sse",
          "--header",
          "apikey:{{api_key}}"
        ]
      },
      "documentation": "https://github.com/Coresignal-com/coresignal-mcp/",
      "repository": "https://github.com/Coresignal-com/coresignal-mcp/",
      "author": "Coresignal",
      "tags": ["b2b-data", "companies", "employees", "jobs", "api"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "wuye-ai",
      "name": "CRIC Wuye AI",
      "description": "Intelligent assistant for property management industry with industry-specific knowledge base",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "access_token": {
          "type": "api_key",
          "required": true,
          "description": "CRIC Wuye AI access token (contact xuanao@cric.com)"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@wuye-ai/mcp-server-wuye-ai"],
        "env": {
          "CRIC_WUYE_AI_ACCESS_TOKEN": "{{access_token}}"
        }
      },
      "documentation": "https://github.com/wuye-ai/mcp-server-wuye-ai",
      "repository": "https://github.com/wuye-ai/mcp-server-wuye-ai",
      "author": "Wuye AI",
      "tags": ["property-management", "real-estate", "ai-assistant", "cric"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "cua",
      "name": "Computer-Use Agent (CUA)",
      "description": "MCP server for Computer-Use Agent, allowing you to run CUA through Claude Desktop or other MCP clients",
      "category": "utility",
      "type": "stdio",
      "difficulty": "advanced",
      "requiresAuth": false,
      "installation": {
        "command": "pip",
        "args": ["install", "cua-mcp-server"]
      },
      "documentation": "https://github.com/trycua/cua/tree/main/libs/python/mcp-server",
      "repository": "https://github.com/trycua/cua",
      "author": "CUA Team",
      "tags": ["computer-automation", "agent", "python", "desktop-automation"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "currents",
      "name": "Currents",
      "description": "Enable AI agents to fix Playwright test failures reported to Currents testing platform",
      "category": "development",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Currents API key for accessing test results and CI metadata"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@currents/mcp"],
        "env": {
          "CURRENTS_API_KEY": "{{api_key}}"
        }
      },
      "documentation": "https://github.com/currents-dev/currents-mcp",
      "repository": "https://github.com/currents-dev/currents-mcp",
      "author": "Currents",
      "tags": ["testing", "playwright", "ci-cd", "debugging", "test-failures"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "dart",
      "name": "Dart",
      "description": "AI-native project management tool for task, doc, and project data interaction",
      "category": "productivity",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "dart_token": {
          "type": "api_key",
          "required": true,
          "description": "Dart access token from https://app.itsdart.com/?settings=account"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "dart-mcp-server"],
        "env": {
          "DART_TOKEN": "{{dart_token}}"
        }
      },
      "documentation": "https://github.com/its-dart/dart-mcp-server",
      "repository": "https://github.com/its-dart/dart-mcp-server",
      "author": "Dart",
      "tags": ["project-management", "tasks", "ai-native", "productivity"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "dealx",
      "name": "DealX",
      "description": "Search and manage ads on DealX platform for marketplace operations",
      "category": "web",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": false,
      "parameters": {
        "api_url": {
          "type": "url",
          "required": false,
          "description": "DealX API URL (optional, defaults to production)",
          "default": "https://api.dealx.com"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@dealx/mcp-server"],
        "env": {
          "DEALX_API_URL": "{{api_url}}"
        }
      },
      "documentation": "https://github.com/DealExpress/mcp-server",
      "repository": "https://github.com/DealExpress/mcp-server",
      "author": "DealExpress",
      "tags": ["marketplace", "ads", "e-commerce", "dealx"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "debugg-ai",
      "name": "Debugg AI",
      "description": "AI-driven browser automation and end-to-end testing platform integration",
      "category": "development",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Debugg AI API key from free account signup"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "@debugg-ai/debugg-ai-mcp"],
        "env": {
          "DEBUGGAI_API_KEY": "{{api_key}}"
        }
      },
      "documentation": "https://github.com/debugg-ai/debugg-ai-mcp",
      "repository": "https://github.com/debugg-ai/debugg-ai-mcp",
      "author": "Debugg AI",
      "tags": ["testing", "automation", "e2e", "browser", "ai-testing"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "octagon-deep-research",
      "name": "Octagon Deep Research",
      "description": "Lightning-fast, high-accuracy deep research agent for comprehensive analysis",
      "category": "ai",
      "type": "stdio",
      "difficulty": "simple",
      "requiresAuth": true,
      "parameters": {
        "api_key": {
          "type": "api_key",
          "required": true,
          "description": "Octagon API key from https://app.octagonai.co/signup/"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "octagon-deep-research-mcp"],
        "env": {
          "OCTAGON_API_KEY": "{{api_key}}"
        }
      },
      "documentation": "https://github.com/OctagonAI/octagon-deep-research-mcp",
      "repository": "https://github.com/OctagonAI/octagon-deep-research-mcp",
      "author": "OctagonAI",
      "tags": ["research", "analysis", "ai-agent", "deep-research"],
      "validatedOn": "2025-01-02"
    },
    {
      "id": "alibaba-dataworks",
      "name": "Alibaba DataWorks",
      "description": "Interact with DataWorks Open API for cloud resource operations and data management",
      "category": "database",
      "type": "stdio",
      "difficulty": "medium",
      "requiresAuth": true,
      "parameters": {
        "access_key_id": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key ID"
        },
        "access_key_secret": {
          "type": "api_key",
          "required": true,
          "description": "Alibaba Cloud Access Key Secret"
        },
        "region": {
          "type": "select",
          "required": true,
          "description": "Alibaba Cloud region",
          "options": ["cn-hangzhou", "cn-shanghai", "cn-beijing", "cn-shenzhen", "ap-southeast-1"],
          "default": "cn-hangzhou"
        }
      },
      "installation": {
        "command": "npx",
        "args": ["-y", "alibabacloud-dataworks-mcp-server"],
        "env": {
          "ALIBABA_CLOUD_ACCESS_KEY_ID": "{{access_key_id}}",
          "ALIBABA_CLOUD_ACCESS_KEY_SECRET": "{{access_key_secret}}",
          "ALIBABA_CLOUD_REGION": "{{region}}"
        }
      },
      "documentation": "https://github.com/aliyun/alibabacloud-dataworks-mcp-server",
      "repository": "https://github.com/aliyun/alibabacloud-dataworks-mcp-server",
      "author": "Alibaba Cloud",
      "tags": ["cloud", "dataworks", "alibaba", "data-management", "etl"],
      "validatedOn": "2025-01-02"
    }
  ]
}
